// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimbirSoftWorkshop.API;

namespace SimbirSoftWorkshop.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211129053053_SimbirSoftDbMigration")]
    partial class SimbirSoftDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("middle_name");

                    b.HasKey("Id");

                    b.ToTable("author");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("book");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.BookGenre", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("GenreId")
                        .HasColumnType("int")
                        .HasColumnName("genre_id");

                    b.HasKey("BookId", "GenreId")
                        .HasName("PK_book_id_genre_id");

                    b.HasIndex("GenreId");

                    b.ToTable("book_genre");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("genre_name");

                    b.HasKey("Id");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.LibraryCard", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id");

                    b.HasKey("BookId", "PersonId")
                        .HasName("PK_book_id_person_id");

                    b.HasIndex("PersonId");

                    b.ToTable("library_card");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("birth_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("middle_name");

                    b.HasKey("Id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Book", b =>
                {
                    b.HasOne("SimbirSoftWorkshop.API.Models.ModelsDb.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.BookGenre", b =>
                {
                    b.HasOne("SimbirSoftWorkshop.API.Models.ModelsDb.Book", "Book")
                        .WithMany("BooksGenres")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_book_genre_book")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimbirSoftWorkshop.API.Models.ModelsDb.Genre", "Genre")
                        .WithMany("BookGenre")
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK_book_genre_genre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.LibraryCard", b =>
                {
                    b.HasOne("SimbirSoftWorkshop.API.Models.ModelsDb.Book", "Book")
                        .WithMany("LibraryCards")
                        .HasForeignKey("BookId")
                        .HasConstraintName("FK_library_card_book")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimbirSoftWorkshop.API.Models.ModelsDb.Person", "Person")
                        .WithMany("LibraryCard")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_library_card_person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Book", b =>
                {
                    b.Navigation("BooksGenres");

                    b.Navigation("LibraryCards");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Genre", b =>
                {
                    b.Navigation("BookGenre");
                });

            modelBuilder.Entity("SimbirSoftWorkshop.API.Models.ModelsDb.Person", b =>
                {
                    b.Navigation("LibraryCard");
                });
#pragma warning restore 612, 618
        }
    }
}
